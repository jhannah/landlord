{"version":3,"sources":["../node_modules/jspdf/dist sync","ParcelTable.js","OutOfStateTableData.js","OutOfCityTableData.js","LowConditionTableData.js","MainAppBar.js","MainRouter.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","MaterialTableDemo","tableData","title","columns","parcels","data","options","pageSize","pageSizeOptions","emptyRowsWhenPaging","outOfStateTableData","field","render","rowData","ADDRESS_LA","PROP_CITY","outOfCityTableData","lowConditionTableData","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","MainAppBar","props","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","text","link","exact","map","menuItem","key","to","style","textDecoration","activeStyle","ListItemText","primary","paddingLeft","paddingTop","children","MainRouter","basename","path","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uFAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,y6vrcCJV,SAASC,EAAT,GAAyC,IAAbC,EAAY,EAAZA,UAC/BC,EAA4BD,EAA5BC,MAAOC,EAAqBF,EAArBE,QAASC,EAAYH,EAAZG,QAExB,OACI,kBAAC,IAAD,CACIF,MAAOA,EACPC,QAASA,EACTE,KAAMD,EACNE,QAAS,CACLC,SAAU,GACVC,gBAAiB,CAAC,GAAI,GAAI,KAC1BC,qBAAqB,K,ICZxBC,EAAsB,CAC/BR,MAAO,yBACPC,QAAS,CACL,CAACD,MAAO,aAAcS,MAAO,cAC7B,CAACT,MAAO,gBAAiBS,MAAO,YAChC,CAACT,MAAO,cAAeS,MAAO,cAE9B,CAACT,MAAO,mBAAoBU,OAAQ,SAAAC,GAAO,OAAI,uCAASA,EAAQC,WAAjB,aAAgCD,EAAQE,cACvF,CAACb,MAAO,mBAAoBS,MAAO,WACnC,CAACT,MAAO,qBAAsBS,MAAO,cAEzCP,Q,QCXSY,EAAqB,CAC9Bd,MAAO,yBACPC,QAAS,CACL,CAACD,MAAO,aAAcS,MAAO,cAC7B,CAACT,MAAO,gBAAiBS,MAAO,YAChC,CAACT,MAAO,aAAcS,MAAO,cAE7B,CAACT,MAAO,mBAAoBU,OAAQ,SAAAC,GAAO,OAAI,uCAASA,EAAQC,WAAjB,aAAgCD,EAAQE,cACvF,CAACb,MAAO,mBAAoBS,MAAO,WACnC,CAACT,MAAO,qBAAsBS,MAAO,cAEzCP,Q,QCXSa,EAAwB,CACjCf,MAAO,2BACPC,QAAS,CACL,CAACD,MAAO,aAAcS,MAAO,cAC7B,CAACT,MAAO,gBAAiBS,MAAO,YAChC,CAACT,MAAO,aAAcS,MAAO,cAE7B,CAACT,MAAO,mBAAoBU,OAAQ,SAAAC,GAAO,OAAI,uCAASA,EAAQC,WAAjB,aAAgCD,EAAQE,cACvF,CAACb,MAAO,mBAAoBS,MAAO,WACnC,CAACT,MAAO,qBAAsBS,MAAO,cAEzCP,Q,gMCKEc,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAbW,IAaX,OACLC,WAdgB,IAehBT,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQP,EAAMK,YAAYE,OAAOO,QACjCL,SAAUT,EAAMK,YAAYI,SAASM,kBAGzCC,WAAY,CACVC,YAAajB,EAAMkB,QAAQ,IAE7BC,KAAM,CACJjB,QAAS,QAEXkB,OAAQ,CACNR,MA3BgB,IA4BhBS,WAAY,GAEdC,YAAa,CACXV,MA/BgB,KAiClBW,aAAa,yBACXrB,QAAS,OACTsB,WAAY,SACZC,QAASzB,EAAMkB,QAAQ,EAAG,IAEvBlB,EAAM0B,OAAOC,SALN,IAMVC,eAAgB,aAElBC,QAAS,CACPC,SAAU,EACVL,QAASzB,EAAMkB,QAAQ,GACvBd,WAAYJ,EAAMK,YAAYC,OAAO,SAAU,CAC7CC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASC,gBAEvCG,YAhDgB,KAkDlBkB,aAAc,CACZ3B,WAAYJ,EAAMK,YAAYC,OAAO,SAAU,CAC7CC,OAAQP,EAAMK,YAAYE,OAAOO,QACjCL,SAAUT,EAAMK,YAAYI,SAASM,iBAEvCF,WAAY,OAID,SAASmB,EAAWC,GACjC,IAAMC,EAAUpC,IACVE,EAAQmC,cAF0B,EAGhBC,IAAMC,UAAS,GAHC,mBAGjCC,EAHiC,KAG3BC,EAH2B,KAaxC,OACE,yBAAKC,UAAWN,EAAQjC,MACtB,kBAACwC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CACEC,SAAS,QACTH,UAAWI,YAAKV,EAAQ/B,OAAT,eACZ+B,EAAQvB,YAAc2B,KAGzB,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXC,QArBe,WACvBV,GAAQ,IAqBAW,KAAK,QACLV,UAAWI,YAAKV,EAAQlB,WAAYsB,GAAQJ,EAAQf,OAEpD,kBAAC,IAAD,OAEF,kBAACgC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,GAA/B,wBAKJ,kBAACC,EAAA,EAAD,CACEd,UAAWN,EAAQd,OACnBgC,QAAQ,aACRG,OAAO,OACPjB,KAAMA,EACNJ,QAAS,CACPsB,MAAOtB,EAAQZ,cAGjB,yBAAKkB,UAAWN,EAAQX,cACtB,kBAACuB,EAAA,EAAD,CAAYG,QAtCM,WACxBV,GAAQ,KAsCqB,QAApBvC,EAAMyD,UACL,kBAAC,IAAD,MAEA,kBAAC,IAAD,QAIN,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACG,CAAC,CAACC,KAAM,OAAQC,KAAM,IAAKC,OAAO,GAAO,CAAEF,KAAM,eAAgBC,KAAM,iBAAkB,CAAED,KAAM,eAAgBC,KAAM,iBAAmB,CAAED,KAAM,gBAAiBC,KAAM,mBAAoBE,KAAI,SAACC,GAAD,OAChM,kBAAC,IAAD,CAASC,IAAKD,EAASJ,KAAMM,GAAIF,EAASH,KAAMM,MAAO,CAACC,eAAgB,OAAQrB,MAAO,SAAUsB,YAAa,CAACtB,MAAO,QAASe,MAAOE,EAASF,OAC3I,kBAACQ,EAAA,EAAD,CAAcC,QAASP,EAASJ,KAAMO,MAAO,CAACK,YAAa,OAAQC,WAAY,eAKzF,0BACEjC,UAAWI,YAAKV,EAAQL,QAAT,eACZK,EAAQH,aAAeO,KAG1B,yBAAKE,UAAWN,EAAQX,eAEvBU,EAAMyC,WC3IA,SAASC,IACpB,OACI,kBAAC,IAAD,CAAQC,SAAU,YACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,iBACR,kBAAC7C,EAAD,KACI,kBAAC,EAAD,CAAanD,UAAWS,MAGhC,kBAAC,IAAD,CAAOuF,KAAK,iBACR,kBAAC7C,EAAD,KACI,kBAAC,EAAD,CAAanD,UAAWe,MAGhC,kBAAC,IAAD,CAAOiF,KAAK,kBACR,kBAAC7C,EAAD,KACI,kBAAC,EAAD,CAAanD,UAAWgB,MAGhC,kBAAC,IAAD,CAAOgF,KAAK,IAAIf,OAAO,GACnB,kBAAC9B,EAAD,KACI,kBAAC,EAAD,CAAanD,UAAWgB,QCjBjCiF,MARf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACJ,EAAD,QCKcK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aCXNC,IAAS7F,OACP,kBAAC,IAAM8F,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.728624c0.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 353;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaterialTable from 'material-table';\n\nexport default function MaterialTableDemo({tableData}) {\n    const { title, columns, parcels } = tableData;\n\n    return (\n        <MaterialTable\n            title={title}\n            columns={columns}\n            data={parcels}\n            options={{\n                pageSize: 10,\n                pageSizeOptions: [10, 40, 100],\n                emptyRowsWhenPaging: false,\n            }\n            }\n        />\n    );\n}\nMaterialTableDemo.propTypes = {\n    tableData: PropTypes.object,\n};\n","import React from \"react\";\nimport outOfStateParcels from \"./owner_out_of_state.json\";\n\nexport const outOfStateTableData = {\n    title: \"Out of state landlords\",\n    columns: [\n        {title: 'Owner Name', field: 'OWNER_NAME'},\n        {title: 'Owner Address', field: 'ADDRESS2'},\n        {title: 'Owner State', field: 'OWNER_STAT'},\n        // eslint-disable-next-line react/display-name\n        {title: 'Property Address', render: rowData => <div>{`${rowData.ADDRESS_LA}, ${rowData.PROP_CITY}`}</div>},\n        {title: 'Property Quality', field: 'QUALITY'},\n        {title: 'Property Condition', field: 'CONDITION'},\n    ],\n    parcels: outOfStateParcels,\n}","import React from \"react\";\nimport outOfCityParcels from \"./owner_in_state_out_of_city.json\";\n\nexport const outOfCityTableData = {\n    title: \"Out of Omaha landlords\",\n    columns: [\n        {title: 'Owner Name', field: 'OWNER_NAME'},\n        {title: 'Owner Address', field: 'ADDRESS2'},\n        {title: 'Owner City', field: 'OWNER_CITY'},\n        // eslint-disable-next-line react/display-name\n        {title: 'Property Address', render: rowData => <div>{`${rowData.ADDRESS_LA}, ${rowData.PROP_CITY}`}</div>},\n        {title: 'Property Quality', field: 'QUALITY'},\n        {title: 'Property Condition', field: 'CONDITION'},\n    ],\n    parcels: outOfCityParcels,\n}","import React from \"react\";\nimport lowConditionParcels from \"./low_condition_properties.json\";\n\nexport const lowConditionTableData = {\n    title: \"Low condition properties\",\n    columns: [\n        {title: 'Owner Name', field: 'OWNER_NAME'},\n        {title: 'Owner Address', field: 'ADDRESS2'},\n        {title: 'Owner City', field: 'OWNER_CITY'},\n        // eslint-disable-next-line react/display-name\n        {title: 'Property Address', render: rowData => <div>{`${rowData.ADDRESS_LA}, ${rowData.PROP_CITY}`}</div>},\n        {title: 'Property Quality', field: 'QUALITY'},\n        {title: 'Property Condition', field: 'CONDITION'},\n    ],\n    parcels: lowConditionParcels,\n}","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { NavLink} from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function MainAppBar(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Landlords of Omaha\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {[{text: \"Home\", link: \"/\", exact: true}, { text: \"Out of Omaha\", link: \"/out-of-omaha\"}, { text: \"Out of state\", link: \"/out-of-state\" }, { text: \"Low condition\", link: \"/low-condition\" }].map((menuItem) => (\n            <NavLink key={menuItem.text} to={menuItem.link} style={{textDecoration: 'none', color: 'black'}} activeStyle={{color: 'blue'}} exact={menuItem.exact} >\n                <ListItemText primary={menuItem.text} style={{paddingLeft: '10px', paddingTop: '5px'}}/>\n              </NavLink>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {/* eslint-disable-next-line react/prop-types */}\n        {props.children}\n      </main>\n    </div>\n  );\n}\n","import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport ParcelTable from \"./ParcelTable\";\nimport React from \"react\";\nimport {outOfStateTableData} from \"./OutOfStateTableData\"\nimport {outOfCityTableData} from \"./OutOfCityTableData\";\nimport {lowConditionTableData} from \"./LowConditionTableData\";\nimport MainAppBar from \"./MainAppBar\";\n\nexport default function MainRouter() {\n    return (\n        <Router basename={\"landlord\"}>\n            <Switch>\n                <Route path=\"/out-of-state\">\n                    <MainAppBar>\n                        <ParcelTable tableData={outOfStateTableData}/>\n                    </MainAppBar>\n                </Route>\n                <Route path=\"/out-of-omaha\">\n                    <MainAppBar>\n                        <ParcelTable tableData={outOfCityTableData}/>\n                    </MainAppBar>\n                </Route>\n                <Route path=\"/low-condition\">\n                    <MainAppBar>\n                        <ParcelTable tableData={lowConditionTableData}/>\n                    </MainAppBar>\n                </Route>\n                <Route path=\"/\" exact={true}>\n                    <MainAppBar>\n                        <ParcelTable tableData={lowConditionTableData}/>\n                    </MainAppBar>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport MainRouter from \"./MainRouter\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <MainRouter />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { FirebaseDatabaseProvider } from \"@react-firebase/database\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseDatabaseProvider>\n      <App />\n    </FirebaseDatabaseProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}